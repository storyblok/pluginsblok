name: Release

on:
  workflow_dispatch:

env:
  HUSKY: 0
  NX_REJECT_UNKNOWN_LOCAL_CACHE: 0

jobs:
  dry-run:
    name: Dry Run
    runs-on: ubuntu-latest
    environment: test
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
          fetch-tags: true

      - uses: ./.github/actions/setup-node

      - name: Run tests, linting and building
        run: pnpm nx run-many --target=test --parallel=3 -p="tag:npm:public"

      - name: Dry run
        run: pnpm nx release --dry-run --verbose

      - name: Print Environment Info
        run: pnpm nx report

  # Production release requires human approval
  release:
    name: Release (Production)
    needs: dry-run
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: write # Required for creating tags and commits
      id-token: write # Required for npm provenance
      pull-requests: write # Required for GitHub releases
    timeout-minutes: 20
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
          fetch-tags: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: ./.github/actions/setup-node

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Configure npm authentication
        run: pnpm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Determine branch and npm tag
        id: release-info
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT

          case "$BRANCH_NAME" in
            "main")
              echo "npm_tag=latest" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "npm_tag=$BRANCH_NAME" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Build all packages
        run: pnpm nx run-many --target=build --parallel=3 -p="tag:npm:public"

      - name: Version and create release
        run: pnpm nx release --skip-publish --verbose

      - name: Publish packages to npm
        run: pnpm nx release publish --excludeTaskDependencies --tag=${{ steps.release-info.outputs.npm_tag }} --verbose
